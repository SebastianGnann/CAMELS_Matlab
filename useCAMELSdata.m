%% useCAMELSdata
% 
%   This script shows how to use the CAMELS struct files created with
%   saveCAMELSdata.m; specifically, it shows how to:
%   - load the struct files 
%   - plot the data (scatter plots, maps).
%
%   Note that this script requires sufficient RAM.
%
%   Copyright (C) 2021
%   This software is distributed under the GNU Public License Version 3.
%   See <https://www.gnu.org/licenses/gpl-3.0.en.html> for details.

%% add paths

% working directory
mydir = 'CAMELS_Matlab';
addpath(genpath(mydir));

% figure path
fig_path = 'CAMELS_Matlab/Figures/';
if ~(exist(fig_path) == 7) % create one if it does not exist
    mkdir (fig_path)
end

%% load useful packages 

if (exist('BrewerMap') == 7)
    addpath(genpath('BrewerMap'));
else
    error('BrewerMap toolbox needed. Can be downloaded from https://github.com/DrosteEffect/BrewerMap and should be in a folder named BrewerMap in the same directory.')
end

%% load catchment data

CAMELS_US_data = load('CAMELS_Matlab/Data/CAMELS_US_data.mat');
CAMELS_GB_data = load('CAMELS_Matlab/Data/CAMELS_GB_data.mat');
CAMELS_CL_data = load('CAMELS_Matlab/Data/CAMELS_CL_data.mat');
CAMELS_BR_data = load('CAMELS_Matlab/Data/CAMELS_BR_data.mat');
CAMELS_AUS_data = load('CAMELS_Matlab/Data/CAMELS_AUS_data.mat');

%% prepare data
% We can create some helper arrays that can be used to plot only a subset 
% of the data (e.g. catchments withouth significant snow fraction).

subsetUS = true(length(CAMELS_US_data.gauge_id),1);
subsetUS(CAMELS_US_data.frac_snow>0.2) = false;

subsetGB = true(length(CAMELS_GB_data.gauge_id),1);
subsetGB(CAMELS_GB_data.frac_snow>0.2) = false;
% subsetGB(~CAMELS_GB_data.isBenchmark) = false;

subsetCL = true(length(CAMELS_CL_data.gauge_id),1);
% subsetCL(CAMELS_CL_data.interv_degree>1) = false;
subsetCL(CAMELS_CL_data.frac_snow_mswep>0.2) = false;
subsetCL(CAMELS_CL_data.lc_glacier>1) = false;

subsetBR = true(length(CAMELS_BR_data.gauge_id),1);
subsetBR(CAMELS_BR_data.frac_snow>0.2) = false;
% subsetBR(CAMELS_BR_data.degree_of_regulation>1) = false;

subsetAUS = true(length(CAMELS_AUS_data.station_id),1);
subsetAUS(CAMELS_AUS_data.frac_snow>0.2) = false;

%% scatter plots
% We can have a look at the different brewerMap color scales by running:
% brewerMap('plot')

%% map plots
% We can plot and save maps of some attribute using the plotMap functions.
% to do: adjust colorbars

plotMap_US(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_data.aridity,'attribute_name','PET/P [-]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','RdBu','flip_colour_scheme',true,...
    'c_limits',[0.1 10],'c_log_scale',true,...
    'figure_name','aridity','save_figure',true,'figure_path',fig_path)

plotMap_GB(CAMELS_GB_data.gauge_lat,CAMELS_GB_data.gauge_lon,...
    CAMELS_GB_data.aridity,'attribute_name','PET/P [-]',...
    'ID',CAMELS_GB_data.gauge_id,...
    'colour_scheme','RdBu','flip_colour_scheme',true,...
    'c_limits',[0.1 10],'c_log_scale',true,...
    'figure_name','aridity','save_figure',true,'figure_path',fig_path)

plotMap_CL(CAMELS_CL_data.gauge_lat,CAMELS_CL_data.gauge_lon,...
    CAMELS_CL_data.aridity_mswep,'attribute_name','PET/P [-]',...
    'ID',CAMELS_CL_data.gauge_id,...
    'colour_scheme','RdBu','flip_colour_scheme',true,...
    'c_limits',[0.1 10],'c_log_scale',true,...
    'figure_name','aridity','save_figure',true,'figure_path',fig_path)

plotMap_BR(CAMELS_BR_data.gauge_lat,CAMELS_BR_data.gauge_lon,...
    CAMELS_BR_data.aridity,'attribute_name','PET/P [-]',...
    'ID',CAMELS_BR_data.gauge_id,...
    'colour_scheme','RdBu','flip_colour_scheme',true,...
    'c_limits',[0.1 10],'c_log_scale',true,...
    'figure_name','aridity','save_figure',true,'figure_path',fig_path)

plotMap_AUS(CAMELS_AUS_data.lat_centroid,CAMELS_AUS_data.long_centroid,...
    CAMELS_AUS_data.aridity,'attribute_name','PET/P [-]',...
    'ID',CAMELS_AUS_data.gauge_id,...
    'colour_scheme','RdBu','flip_colour_scheme',true,...
    'c_limits',[0.1 10],'c_log_scale',true,...
    'figure_name','aridity','save_figure',true,'figure_path',fig_path)

% Various options can be specified.
% plotMap_US(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
%     CAMELS_US_data.aridity,'attribute_name','PET/P [-]',...
%     'ID',CAMELS_US_data.gauge_id,...
%     'colour_scheme','RdBu','flip_colour_scheme',true,...
%     'c_limits',[0.1 10],'c_log_scale',true,...
%     'c_lower_limit_open',false,'c_upper_limit_open',false,...
%     'figure_title','','figure_name','Aridity',...
%     'save_figure',false,'figure_path',fig_path,'figure_type','-dpng')

%% global map
% We can also plot a global map showing all datasets together. To do so, we
% first need to merge the coordinates and the attributes we want to plot.

lat_globe = [...
    CAMELS_US_data.gauge_lat; CAMELS_GB_data.gauge_lat;...
    CAMELS_CL_data.gauge_lat;CAMELS_BR_data.gauge_lat;...
    CAMELS_AUS_data.lat_centroid;];
lon_globe = [...
    CAMELS_US_data.gauge_lon; CAMELS_GB_data.gauge_lon;...
    CAMELS_CL_data.gauge_lon;CAMELS_BR_data.gauge_lon;...
    CAMELS_AUS_data.long_centroid;];
aridity_globe = [...
    CAMELS_US_data.aridity; CAMELS_GB_data.aridity;...
    CAMELS_CL_data.aridity_mswep;CAMELS_BR_data.aridity;...
    CAMELS_AUS_data.aridity;];
id_globe = [...
    CAMELS_US_data.gauge_id; CAMELS_GB_data.gauge_id;...
    CAMELS_CL_data.gauge_id;CAMELS_BR_data.gauge_id;...
    CAMELS_AUS_data.gauge_id;];

plotMap_Globe(lat_globe,lon_globe,...
    aridity_globe,'attribute_name','PET/P [-]',...
    'ID',id_globe,...
    'colour_scheme','RdBu','flip_colour_scheme',true,...
    'c_limits',[0.1 10],'c_log_scale',true,...
    'figure_name','aridity','save_figure',false,'figure_path',fig_path)

